<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<bean id = "loggingAdvice" class = "xml.LoggingAdvice" />
	<bean id = "cacheAdvice" class = "xml.ArticleCacheAdvice" />
	<bean id = "traceAdvice" class = "xml.UpdateMemberInfoTraceAdvice" />
	<aop:config>
		<aop:aspect id = "traceAspect" ref = "traceAdvice" order = "1">
		<!--  아규먼트로 포인트컷 대상 지정 가능! -->
			<aop:after-returning method = "traceReturn" pointcut = "args(id,info)" returning = "ret" arg-names = "ret,id,info" />
		</aop:aspect>
		<aop:aspect id = "cacheAspect" ref = "cacheAdvice" order = "2">
		<!--  aspect 간 순서 지정 가능( 단 FILO 스택과 같은 형식, 1,2,3 -> 3,2,1) -->
			<aop:around method = "cache" pointcut = "execution(public * *..ReadArticleService.*(..))"/>			
		</aop:aspect>
		<aop:aspect id = "loggingAspect" ref = "loggingAdvice" order = "3">
			<aop:pointcut expression="execution(public * xml..*(..))" id="publicMethod"/>
			<!--  시작 전 before 수행 -->
			<aop:before method="before" pointcut-ref = "publicMethod" />
			<!--  정상 반환일 경우는 after-returning aop 수행 -->
			<aop:after-returning method="afterReturning" pointcut-ref = "publicMethod" returning = "ret" />
			<!--  비정상 반환(에러) 일 경우는 after-throwing aop 수행 -->
			<aop:after-throwing method="afterThrowing" pointcut-ref = "publicMethod" throwing = "ex" />
			<!--  작업 종료 후 after 수행 -->
			<aop:after method="afterFinally" pointcut-ref = "publicMethod" />
		</aop:aspect>
	</aop:config>
	
</beans>